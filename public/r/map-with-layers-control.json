{
    "$schema": "https://ui.shadcn.com/schema/registry-item.json",
    "name": "map-with-layers-control",
    "type": "registry:example",
    "registryDependencies": ["map"],
    "files": [
        {
            "path": "registry/new-york-v4/examples/map-with-layers-control.tsx",
            "content": "import {\n    Map,\n    MapLayerGroup,\n    MapLayers,\n    MapLayersControl,\n    MapMarker,\n    MapPopup,\n    MapTileLayer,\n} from \"@/registry/new-york-v4/ui/map\"\nimport type { LatLngExpression } from \"leaflet\"\nimport { DropletIcon, MountainIcon, PawPrintIcon } from \"lucide-react\"\n\nexport function MapWithLayersControl() {\n    const PLACES = [\n        {\n            name: \"Water\",\n            places: [\n                {\n                    name: \"Victoria Falls\",\n                    coordinates: [-17.9243, 25.856] satisfies LatLngExpression,\n                    icon: <DropletIcon />,\n                },\n                {\n                    name: \"Lake Malawi\",\n                    coordinates: [-12.1333, 34.5667] satisfies LatLngExpression,\n                    icon: <DropletIcon />,\n                },\n                {\n                    name: \"Orange River\",\n                    coordinates: [-28.6327, 16.4522] satisfies LatLngExpression,\n                    icon: <DropletIcon />,\n                },\n            ],\n        },\n        {\n            name: \"Mountains\",\n            places: [\n                {\n                    name: \"Table Mountain\",\n                    coordinates: [-33.9628, 18.4098] satisfies LatLngExpression,\n                    icon: <MountainIcon />,\n                },\n                {\n                    name: \"Mount Kenya\",\n                    coordinates: [-0.1521, 37.3084] satisfies LatLngExpression,\n                    icon: <MountainIcon />,\n                },\n                {\n                    name: \"Kilimanjaro\",\n                    coordinates: [-3.0674, 37.3556] satisfies LatLngExpression,\n                    icon: <MountainIcon />,\n                },\n            ],\n        },\n        {\n            name: \"Safari\",\n            places: [\n                {\n                    name: \"Etosha National Park\",\n                    coordinates: [-18.7852, 16.2638] satisfies LatLngExpression,\n                    icon: <PawPrintIcon />,\n                },\n                {\n                    name: \"Serengeti\",\n                    coordinates: [-2.3333, 34.8333] satisfies LatLngExpression,\n                    icon: <PawPrintIcon />,\n                },\n                {\n                    name: \"Kruger National Park\",\n                    coordinates: [-23.9884, 31.5547] satisfies LatLngExpression,\n                    icon: <PawPrintIcon />,\n                },\n            ],\n        },\n    ]\n\n    return (\n        <Map center={PLACES[0].places[0].coordinates} zoom={3}>\n            <MapLayers defaultLayerGroups={PLACES.map((place) => place.name)}>\n                <MapLayersControl />\n                <MapTileLayer />\n                <MapTileLayer\n                    name=\"No Labels\"\n                    url=\"https://{s}.basemaps.cartocdn.com/light_nolabels/{z}/{x}/{y}{r}.png\"\n                    darkUrl=\"https://{s}.basemaps.cartocdn.com/dark_nolabels/{z}/{x}/{y}{r}.png\"\n                />\n                {PLACES.map((placesGroup) => (\n                    <MapLayerGroup\n                        key={placesGroup.name}\n                        name={placesGroup.name}>\n                        {placesGroup.places.map((place) => (\n                            <MapMarker\n                                key={place.name}\n                                position={place.coordinates}\n                                icon={place.icon}>\n                                <MapPopup className=\"w-44\">\n                                    {place.name}\n                                </MapPopup>\n                            </MapMarker>\n                        ))}\n                    </MapLayerGroup>\n                ))}\n            </MapLayers>\n        </Map>\n    )\n}\n",
            "type": "registry:example"
        }
    ]
}
